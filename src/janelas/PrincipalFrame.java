/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janelas;

import classes.User;
import controller.LoginController;
import controller.PrincipalController;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author 264636
 */
public class PrincipalFrame extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalFrame
     *
     * @param user
     */
    public PrincipalFrame(User user) {
        this.loginController = new LoginController();
        this.principalController = new PrincipalController();
        this.user = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensagens = new javax.swing.JTextArea();
        txtNovaMsg = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaUsers = new javax.swing.JList();
        btnLimpar = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de Chat");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Usu√°rio:");

        lblUser.setText("nome do usuario");

        txtMensagens.setColumns(20);
        txtMensagens.setRows(5);
        jScrollPane1.setViewportView(txtMensagens);

        txtNovaMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNovaMsgActionPerformed(evt);
            }
        });

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        listaUsers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listaUsers);

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNovaMsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnLimpar)
                                    .addGap(242, 242, 242))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblUser))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNovaMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnviar))
                .addGap(46, 46, 46))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.deslogar();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.lblUser.setText(this.user.getNome());
        this.listarUsers();
        this.listarMensagens();
        this.temporizador();
    }//GEN-LAST:event_formWindowOpened

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        this.enviarMensagem();
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void txtNovaMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNovaMsgActionPerformed
        this.enviarMensagem();
    }//GEN-LAST:event_txtNovaMsgActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        this.limparChat();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void deslogar() {
        loginController.deslogar(user);
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
    }
    
    private void listarUsers() {
        ArrayList<User> users = principalController.buscarLogados(user);
        DefaultListModel model = new DefaultListModel();
        for(User u : users) {
            model.addElement(u);
        }
        listaUsers.setModel(model);
    }
    
    private void listarMensagens() {
        String msg = principalController.buscarMensagensPorUser(user);
        txtMensagens.setText(msg);
    }
    
    private void enviarMensagem() {
        List<User> users = this.usersSelecionados();
        if(users.size() > 0) {
            principalController.enviarMensagem(user, txtNovaMsg.getText(), users);
        } else {
            principalController.enviarMensagem(user, txtNovaMsg.getText());
        }
        
        txtNovaMsg.setText(null);
        this.listarMensagens();
        this.listarUsers();
    }
    
    private void limparChat() {
        principalController.limparMensagens(user);
        this.listarMensagens();
        this.listarUsers();
    }
    
    public void temporizador() {
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                try {
                    List<User> users = usersSelecionados();
                    listarUsers();
                    listarMensagens();
                    manterSelecionados(users);
                } catch (Exception ex) {
                }
            }
        }, 1, 2000);
    }
    
    private List<User> usersSelecionados() {
        List<User> users = this.listaUsers.getSelectedValuesList();
        return users;
    } 
    
    private void manterSelecionados(List<User> users) {
        this.listaUsers.setSelectionMode(
            ListSelectionModel.MULTIPLE_INTERVAL_SELECTION
        );     
        int[] indices = new int[this.listaUsers.getModel().getSize()];
        
        for(int i = 0; i < indices.length; i++) {
            indices[i] = -1;
        }
        
        for(User u : users) {
            for(int i = 0; i < this.listaUsers.getModel().getSize(); i++) {
                User ul = (User) this.listaUsers.getModel().getElementAt(i);
                if (ul.getId_user() == u.getId_user()) {
                    indices[i] = i;
                }
            }
        }
        
        /*for(int i = 0; i < indices.length; i++) {
            System.out.println(indices[i]);
        }*/
        
        this.listaUsers.setSelectedIndices(indices);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblUser;
    private javax.swing.JList listaUsers;
    private javax.swing.JTextArea txtMensagens;
    private javax.swing.JTextField txtNovaMsg;
    // End of variables declaration//GEN-END:variables
    private LoginController loginController;
    private PrincipalController principalController;
    private User user;
}
